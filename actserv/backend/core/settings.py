"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from datetime import timedelta
import os
from pathlib import Path
from decouple import config
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

SECRET_KEY = os.environ.get('SECRET_KEY', 'your-insecure-fallback-key')
DEBUG = os.environ.get('DEBUG', 'True') == 'True'


ALLOWED_HOSTS = ['*']
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5174",  
    "http://127.0.0.1:5174",
    ]
CORS_ALLOW_CREDENTIALS = True

# Application definition

INSTALLED_APPS = [
     'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'corsheaders',
    'rest_framework',
    "drf_spectacular",
    'rest_framework_simplejwt.token_blacklist',
    
    #installed local apps
    'forms',
    'authentication',

    
]

GRAPPELLI_ADMIN_TITLE = "ActServ Onboarding System Admin" 

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'

DB_HOST = os.environ.get('POSTGRES_DB_HOST', 'localhost')
DB_NAME = os.environ.get('POSTGRES_DB_NAME', 'actserv') # Use a fallback for local testing without Docker
DB_USER = os.environ.get('POSTGRES_DB_USER', 'mburu')
DB_PASS = os.environ.get('POSTGRES_DB_PASSWORD', 'dev_password')
DB_PORT = os.environ.get('POSTGRES_DB_PORT', '5432')

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': DB_NAME,
        'USER': DB_USER,
        'PASSWORD': DB_PASS,
        'HOST': DB_HOST,
        'PORT': DB_PORT,
    }
}

# Add this setting for Docker to allow connections from the frontend service
ALLOWED_HOSTS = ['localhost', '127.0.0.1', 'backend'] 
# 'backend' is the service name used in docker-compose, allowing internal container communication

# Static and Media files for Docker volumes
# These paths must match the paths created in the Backend Dockerfile
MEDIA_ROOT = '/vol/web/media'
STATIC_ROOT = '/vol/web/static'



# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'authentication.CustomUser'



REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication', 
    ),
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema', 
}
JAZZMIN_SETTINGS = {
   
    "site_title": "Financial Services Admin",
    "site_header": "Financial Services",
    "site_brand": "Onboarding System",
    "welcome_sign": "Welcome to ActServ Onboarding System Admin Portal",
    
    # # UI builder is defined here
    # "show_ui_builder": True, 
}

JAZZMIN_UI_TWEAKS = {
    
    "theme": "yeti",
    "dark_theme":"solar",
 
}

SPECTACULAR_SETTINGS = {
    "TITLE": "Onboading System APIs",
    "DESCRIPTION": "API documentation for the Oboarding  System",
    "VERSION": "1.0.0",
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(hours=7),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "AUTH_HEADER_TYPES": ("Bearer",),
    "SIGNING_KEY": SECRET_KEY,
    "BLACKLIST_AFTER_ROTATION": True,
    "TOKEN_OBTAIN_SERIALIZER": "rest_framework_simplejwt.serializers.TokenObtainPairSerializer",
}

CORS_ALLOW_ALL_ORIGINS = True 

EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend" # new
SITE_ID = 1

#celery configs
CELERY_BROKER_URL = 'redis://localhost:6379/0' 
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC'

#email configs
# --- EMAIL CONFIGURATION ---
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True 

EMAIL_HOST_USER = config('EMAIL_HOST_USER')

EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')

DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL')
# 
# emails listed here receive output from mail_admins()
ADMIN_EMAIL = config('ADMINS_EMAIL_ADDRESS', default='summitseekers254@gamil.com')
ADMINS = [
    ('Site Admin', ADMIN_EMAIL), 
]

# this address that receives broken link emails and other miscellaneous error notifications
SERVER_EMAIL = DEFAULT_FROM_EMAIL

#swagger settings
SPECTACULAR_SETTINGS = {
    'TITLE': 'ActServ Onboarding Form System API',
    'DESCRIPTION': 'API endpoints for managing dynamic forms, submissions, and client data.',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,  
    'SCHEMA_PATH_PREFIX': r'/api/v[0-9]/', 
    'CONTACT': {'name': 'System Admin', 'email': 'summitseekers254@gmail.com'},
}